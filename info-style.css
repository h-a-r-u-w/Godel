*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    scroll-behavior: smooth;
}

body{
    min-height: 100vh;
    background: linear-gradient(black, white);
    overflow-x: hidden;
}

html, body {
  overscroll-behavior: none;
}

section{
    position: relative;
    width: 100%;
    height: 100vh;
    padding: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
   overflow: hidden;
}

section::before{
    content: '';
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100px;
    background: linear-gradient(to top,black,transparent);
    z-index: 1000;
}

section img{
    position: absolute;
    top: 0;
    left:0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    pointer-events: none;
}

section img#moon{
    mix-blend-mode: screen;
}

section img#road {
    z-index: 10;
}

#text{
    position: absolute;
    left: 50%;
    top: 50%;
    white-space: nowrap;
    z-index: 9;
    transform: translateY(-50px);
}

#btn{
    text-decoration: none;
    display: inline-block;
    padding: 8px 30px;
    border-radius: 40px;
    background: white;
    color: black;
    font-size: 1.5em;
    z-index: 9;
    transform: translateY(75px); /*adjust*/
}

.sec{
    position: relative;
    padding: 100px;
    background:black
}

.sec h2{
    font-size: 3.5em;
    margin-bottom: 10px;
    color:white;
    
}

.sec p{
    font-size: 1.2em;
    color:white;
    
}

#stars {
  transform: scale(1.2);
}

header img{
  width: 150px;
}



nav{
  display: flex; /* turns the nav into a flexbox container */
  padding: 2% 6%; /* 2% padding on the top & bottom, and 6% on the left & right (relative to the screen size) */
  justify-content: space-between; /* inner spacing between the items*/
  align-items: center; /*vertically centers the child elements within the nav bar*/
}

nav img{ /* this targets any <img> inside a <nav> element */
  width: 150px;
}

.nav-links{
  flex: 1; /* this tells the .nav-links container to take up all the remaining horizontal space in the nav bar*/
  text-align: right; /*aligns the text (and inline elements) inside .nav-links to the right side of its space*/
}

.nav-links ul li{ /* means to apply these styles to every <li> that is inside a <ul>*/
  list-style: none; /*removes the default bullet points from <li> elements*/
  display: inline-block;/*makes each <li> behave like a box in a row*/
  padding: 8px 12px; /* Adds spacing inside each item, top/bottom and left/right*/
  position: relative;
}

.nav-links ul li a{ /*this styles the <a> tag â€” the clickable link*/
  color: #fff;
  text-decoration: none;
  font-size: 13px;
}

.nav-links ul li::after{ /* adds fake content after an element*/
  content: ''; /* required to create the pseudo-element, even if it shows nothing*/
  width: 0%; /*starts as invisible (0 width)*/
  height: 2px; /* a thin bar */
  background: #f44336; /*bar colour*/
  display: block; /*makes it behave like a block element. forces the ::after element to go to its own line, after the text, so it appears underneath*/
  margin: auto; /*centers the underline under the text*/
  transition: 0.5s;
}

.nav-links ul li:hover::after{
  width: 100%;
}

.text-box {
  width: 90%; /*makes the text box take up 90% of the screen width*/
  color: #fff;
  position: absolute; /*lets you freely place it anywhere inside the .header*/
  top: 50%;
  left: 50%; 
  transform: translate(-50%, -50%); /* all used to adjust the box into center*/
  text-align: center;
}

.text-box h1{
  font-size: 62px;
}

.text-box p{
  margin: 10px 0 40px; /* this is shorthand for top, right/left, bottom margins*/
  font-size: 14px;
  color: #fff;
}

.hero-btn{
  display: inline-block; /*inline-block lets the element sit inline (next to other elements), but still behave like a box*/
  text-decoration: none;
  color: #fff;
  border: 1px solid #fff;
  padding: 12px 34px;
  font-size: 13px;
  background: transparent;
  position: relative;
  cursor: pointer; /* changes the mouse cursor to a pointer (hand)*/
  
}


.hero-btn:hover{
  border: 1px solid #f44336;
  background: #f44336;
  transition: 1s;
  text-decoration: none;
}

nav .fa{ /*targets any element with a class of .fa inside a <nav>*/
  display: none;
}

@media (max-width: 700px) { /*lets you apply different CSS depending on the screen size*/
  .text-box h1 {
    font-size: 20px;
  }

  .nav-links ul li {
    display: block; /*stacks nav items vertically instead of in a row*/
  }

  .nav-links {
    position: absolute;
    background: #f44336;
    height: 100vh;
    width: 200px;
    top: 0;
    right: -200px;
    text-align: left;
    z-index: 2; /*brings it in front of other content*/
    transition: 1s;
  }

  nav .fa { /*shows the Font Awesome icon*/
    display: block;
    color: #fff;
    margin: 10px;
    font-size: 22px;
    cursor: pointer;
  }

  .nav-links ul {
    padding: 30px;
  }
}

.nav-links ul li.no-underline::after {
  content: none;
}


.user-icon-hover i.fa-solid {
  display: none;
}

.user-icon-hover a:hover i.fa-regular {
  display: none;
}

.user-icon-hover a:hover i.fa-solid {
  display: inline;
/*------------------glowing text---------*/

@keyframes glow { /*@keyframes is used to create animations by specifying the changes over time. it defines how an element will look at certain points in the animation (like 0%, 50%, 100%).*/
  0% {
    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #ff7f00, 0 0 40px #ff7f00, 0 0 50px #ff7f00, 0 0 75px #ff7f00; /*light shadow=glow*/
  }
  50% {
    text-shadow: 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #ff7f00, 0 0 50px #ff7f00, 0 0 60px #ff7f00, 0 0 90px #ff7f00;
  }
  100% {
    text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #ff7f00, 0 0 40px #ff7f00, 0 0 50px #ff7f00, 0 0 75px #ff7f00;
  }
}

.glowing-text {
  font-size: 7.5vw; /* Adjust font size */
  color: white;
  font-weight: bold;
  animation: glow 1.5s ease-in-out infinite; /* Glow effect with infinite looping */
}
